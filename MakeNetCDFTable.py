# -*- coding: utf-8 -*-
# ---------------------------------------------------------------------------
# MakeNetCDFTable.py
# Created on: 2012-12-18 08:58:12.00000
#   (generated by ArcGIS/ModelBuilder)
# Usage: MakeNetCDFTable <Input_Point> <input_Net_CDF> <cf14_View4> 
# Description: 
# ---------------------------------------------------------------------------

# Import arcpy module
import arcpy

# Script arguments
Input_Point = arcpy.GetParameterAsText(0)
if Input_Point == '#' or not Input_Point:
    Input_Point = "p" # provide a default value if unspecified

input_Net_CDF = arcpy.GetParameterAsText(1)
if input_Net_CDF == '#' or not input_Net_CDF:
    input_Net_CDF = "C:\\ArcGISData\\FedGIS_2013\\Scientific\\Data\\netCDF\\norfolk_slr_1m.nc" # provide a default value if unspecified

cf14_View4 = arcpy.GetParameterAsText(2)
if cf14_View4 == '#' or not cf14_View4:
    cf14_View4 = "cf14_View3" # provide a default value if unspecified


arcpy.AddMessage(input_Net_CDF)

# Local variables:
XDim = Input_Point
YDim = Input_Point

# Identify the geometry field
#
desc = arcpy.Describe(Input_Point)
shapefieldname = desc.ShapeFieldName

arcpy.AddMessage(shapefieldname)

print(shapefieldname)
# Create search cursor
#
rows = arcpy.SearchCursor(Input_Point)

# Enter for loop for each feature/row
#
for row in rows:
    # Create the geometry object 'feat'
    #
    feat = row.getValue(shapefieldname)
    pnt = feat.getPart()

    # Print x,y coordinates of current point
    #
    XDim = pnt.X
    YDim = pnt.Y

    arcpy.AddMessage("X: " + str(pnt.X) + "  Y: " + str(pnt.Y))

# Process: Calculate Value
#arcpy.CalculateValue_management("getXY(r\"%Input_Point%\")", "def getXY(inpnt):\\n  import arcpy  \\n  for row in arcpy.SearchCursor(inpnt):       \\n    feat = row.shape\\n    pnt = feat.getPart()\\n  return str(pnt.X)", "Double")

# Process: Calculate Value (2)
#arcpy.CalculateValue_management("getXY(r\"%Input_Point%\")", "def getXY(inpnt):\\n  import arcpy  \\n  for row in arcpy.SearchCursor(inpnt):       \\n    feat = row.shape\\n    pnt = feat.getPart()\\n  return pnt.Y", "Double")

arcpy.AddMessage("lon " + str(XDim) + ";lat " + str(YDim))

# Process: Make NetCDF Table View
#arcpy.MakeNetCDFTableView_md(input_Net_CDF, "height", cf14_View4, "time", "lon %XDim%;lat %YDim%", "BY_VALUE")
arcpy.MakeNetCDFTableView_md(input_Net_CDF, "INUNDATION_RECURRENCE", cf14_View4, "time", "lon " + str(XDim) + ";lat " + str(YDim), "BY_VALUE")

print(arcpy.GetMessages())